namespace ca.mcgill.ecse.climbsafe.model;

use ClimbSafeSM.ump;

class ClimbSafe {
  Date startDate;
  Integer nrWeeks;
  Integer priceOfGuidePerWeek;
  1 <@>- 0..1 Administrator administrator;
  1 <@>- * Guide guides;
  1 <@>- * Member members;
  1 <@>- * BookedItem bookedItems;
  1 <@>- * Equipment equipment;
  1 <@>- * EquipmentBundle bundles;
  1 <@>- * BundleItem bundleItems;
  1 <@>- * Hotel hotels;
  1 <@>- * Assignment assignments;
  
  /**
   * Helper method used to find a guide of the climbsafe system from its email address
   * 
   * @author C�dric Barr�
   * @param email Email of the guide to find in the climbsafe system instance
   * @return
   */
  public Guide findGuideFromEmail(String email){
    List<Guide> guideList = this.getGuides();
    for( Guide g : guideList ) {
      if(g.getEmail().equals(email)) {
        return g;
      }
    }
    return null;
  }

  /**
   * Helper method used to find a member of the climbsafe system from its email address
   * 
   * @author C�dric Barr�
   * @param email Email of the member to find in the climbsafe system instance
   * @return
   */
  public Member findMemberFromEmail(String email){
    List<Member> memberList = this.getMembers();
    for( Member m : memberList ) {
      if(m.getEmail().equals(email)) {
        return m;
      }
    }
    return null;
  }
  
  /**
   * Helper method used to find a hotel of the climbsafe system from its name
   * 
   * @author C�dric Barr�
   * @param name Name of the hotel to find in the climbsafe system instance
   * @return
   */
  public Hotel findHotelFromName(String name){
    List<Hotel> hotelList = this.getHotels();
    for( Hotel h : hotelList ) {
      if(h.getName().equals(name)) {
        return h;
      }
    }
    return null;
  }

  /**
  * this method searches for equipment bundles in the bundleList in climbSafe
  * 
  * @author Habib Jarweh 
  * @param name Name of the bundle to look for
  * @return bundle if found, returns null if not
  */
  public EquipmentBundle findEquipmentBundleFromName(String name){
	List<EquipmentBundle> bundleList = this.getBundles();
	for( EquipmentBundle eb : bundleList ) {
      if(eb.getName().equals(name)) {
	    return eb;
	  }
	}
	return null;
  }
  /**
  * this method searches for an equipment  in the equipment list in climbSafe
  * 
  * @author Habib Jarweh
  * @param name Name of the equipment to look for
  * @return equipment if found, returns null if not
  */
  public Equipment findEquipmentFromName(String name){
    List<Equipment> equipment = this.getEquipment();
    for( Equipment e : equipment ) {
	  if(e.getName().equals(name)) {
		return e;
	  }
	}
	return null;
  }
}

class User {
  abstract;
  unique email;
  password;
}

class Administrator {
  isA User;
}

class NamedUser {
  abstract;
  isA User;
  name;
  emergencyContact;
}

class Guide {
  isA NamedUser;
}

class Member {
  isA NamedUser;
  Integer nrWeeks;
  Boolean guideRequired;
  Boolean hotelRequired;
}

associationClass BookedItem {
  Integer quantity;
  * Member member;
  * BookableItem item;
}

class BookableItem {
  abstract;
  unique name;
}

class Equipment {
  isA BookableItem;
  Integer weight;
  Integer pricePerWeek;
}

class EquipmentBundle {
  isA BookableItem;
  Integer discount;
}

associationClass BundleItem {
  Integer quantity;
  * EquipmentBundle bundle;
  * Equipment equipment;
}

class Hotel {
  unique name;
  address;
  enum HotelRating { OneStar, TwoStars, ThreeStars, FourStars, FiveStars }
  HotelRating rating;
} 

class Assignment {
  Integer startWeek;
  Integer endWeek;
  0..1 -- 1 Member member;
  * -- 0..1 Guide guide;
  * -- 0..1 Hotel hotel;
}